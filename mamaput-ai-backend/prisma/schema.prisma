generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String       @id
  email              String       @unique
  password           String?
  firstName          String?
  lastName           String?
  height             Int?
  weight             Int?
  birthDay           DateTime?
  nationality        Nationality?
  gender             Gender?
  goal               Goal?
  allergies          String[]
  healthConditions   String[]
  dietaryPreferences String[]
  name               String
  emailVerified      Boolean
  image              String?
  createdAt          DateTime
  updatedAt          DateTime
  sessions           Session[]
  accounts           Account[]

  @@map("user")
}

enum Gender {
  MALE
  FEMALE
}

enum Goal {
  GainWeight
  LoseWeight
  ManageHealthCondition
  None
}

enum Nationality {
  Nigeria
  Togo
  Ghana
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}
